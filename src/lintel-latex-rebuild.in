#!/bin/sh
#
# (c) Copyright 2008, Hewlett-Packard Development Company, LP
#
#  See the file named COPYING for license details
#
# script for rebuilding latex files

usage() {
    [ "$1" != "" ] && echo "$@"
    echo "Usage: $0 <srcdir> <main-texfile-basename>"
    exit 0
}

if [ "$1" = "--selfcheck" ]; then
    for i in @LATEX_COMPILER@ @BIBTEX_COMPILER@ @DVIPS_CONVERTER@ @PS2PDF14_CONVERTER@; do
	if [ ! -x $i ]; then
	    echo "lintel-latex-rebuild selfcheck failed; $i is missing"
	    exit 1
	fi
    done
    exit 0
fi

[ $# != 2 -o "$1" = "-h" ] && usage "Missing arguments ($#)"

[ ! -d "$1" ] && usage "'$1' is not a directory"
[ ! -f "$1/$2.tex" ] && usage "'$1/$2.tex' is not a file"
[ `echo "$2" | wc -w` != 1 ] && usage "Main texfile is not one word"

# Trailing : is important; it causes the standard directories to be included.
if [ "$TEXINPUTS" = "" ]; then
    TEXINPUTS=$1:
else 
    TEXINPUTS=$1:$TEXINPUTS
fi
if [ "$BIBINPUTS" = "" ]; then
    BIBINPUTS=$1:
else
    BIBINPUTS=$1:$BIBINPUTS
fi
if [ "$BSTINPUTS" = "" ]; then
    BSTINPUTS=$1:
else
    BSTINPUTS=$1:$BSTINPUTS
fi


export TEXINPUTS
export BIBINPUTS
export BSTINPUTS
TEXFILE=$2

if [ -f $1/$TEXFILE.blg -o -f $1/$TEXFILE.bbl -o -f $1/$TEXFILE.dvi ]; then
    echo "$1/$TEXFILE.{blg,bbl,dvi} already exist."
    echo "this is likely to give you the wrong result; make clean in that dir?"
    exit 1
fi
    
rebuild() {
    echo -n " latex"
    @LATEX_COMPILER@ $TEXFILE.tex </dev/null >$TEXFILE.rebuild.out 2>&1
    latex_err=$?
    echo -n " bibtex"
    @BIBTEX_COMPILER@ $TEXFILE >>$TEXFILE.rebuild.out 2>&1
    bibtex_err=$?
}

# Two initial rounds to get enough far through that it could be stable
echo -n "initial latex rounds:"
rebuild
rebuild
echo " done."

i=0
# Run lots of times until it converges
while [ "`grep -c 'Rerun to get' $TEXFILE.rebuild.out`" != 0 ]; do
    i=`expr $i + 1`
    if [ $i -gt 10 ]; then
	echo "ERROR: unable to achieve latex convergence after 9 tries."
	echo "Log file is $TEXFILE.rebuild.out"
	exit 1
    fi
    echo -n "latex convergence round $i:" 
    rebuild
    echo
done

dvips_err=0
dvipdf_err=0
if [ $latex_err = 0 -a $bibtex_err = 0 ]; then
    @DVIPS_CONVERTER@ -tletter -o$TEXFILE.ps.tmp $TEXFILE.dvi >>$TEXFILE.rebuild.out 2>&1
    dvips_err=$?
    # Make .ps file creation atomic
    [ $dvips_err = 0 ] && mv $TEXFILE.ps.tmp $TEXFILE.ps
    # Why not run dvipdf?  The current version of dvipdf defaults to A4 paper
    # and doesn't pass options to dvips (the underlying engine for dvipdf).
    # so we call dvips and ps2pdf14 directly.
    @DVIPS_CONVERTER@ -Ppdf -G0 -t letter -o $TEXFILE.pdftemp $TEXFILE.dvi >>$TEXFILE.rebuild.out 2>&1
    dvipstemp_err=$?
    @PS2PDF14_CONVERTER@ $TEXFILE.pdftemp $TEXFILE.pdf14tmp >>$TEXFILE.rebuild.out 2>&1
    ps2pdf14_err=$?
    # make .pdf file creation atomic.
    [ $ps2pdf14_err = 0 ] && mv $TEXFILE.pdf14tmp $TEXFILE.pdf
fi

if [ $latex_err != 0 ]; then
    any_err=latex
elif [ $bibtex_err != 0 ]; then
    any_err=bibtex
elif [ $dvips_err != 0 ]; then
    any_err=dvips
elif [ $dvipstemp_err != 0 ]; then
    any_err=dvipstemp
elif [ $ps2pdf14_err != 0 ]; then
    any_err=ps2pdf14
fi

if [ "$any_err" = "" ]; then
    echo "--------- Warnings for $TEXFILE ----------"
    grep -i warning $TEXFILE.rebuild.out
    echo "--------- Warnings for $TEXFILE ----------"
    echo "Full log file is $TEXFILE.rebuild.out"
    echo "Successful latex rebuild." 
exit 0
else 
    echo "--------- ERROR in $TEXFILE -----------"
    tail -50 $TEXFILE.rebuild.out
    echo "--------- ERROR in $TEXFILE -----------"
    echo "Full log file is $TEXFILE.rebuild.out"
    echo "$any_err failed, removing $TEXFILE.{dvi,ps,pdf} files"
    rm $TEXFILE.dvi $TEXFILE.ps $TEXFILE.pdf $TEXFILE.pdftemp
    exit 1
fi


    

