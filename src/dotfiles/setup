#!/bin/sh
# (c) Copyright 2011, Hewlett-Packard Development Company, LP
#
# See the file named COPYING for license details
#
# Setup the files for use; safely symlink them into the home directory.

maybeLink() {
    if [ -f $HOME/.$1 -a \! -h $HOME/.$1 ]; then
	echo "Warning: $HOME/.$1 exists and not a symlink, skipping"
    elif [ -L $HOME/.$1 -a "`readlink $HOME/.$1`" = .dotfiles/$1 ]; then
        :
    else
        echo "Symlinking .dotfiles/$1 to $HOME/.$1"
	rm $HOME/.$1 >/dev/null 2>&1
	ln -sf .dotfiles/$1 $HOME/.$1
    fi
}

linkFromDotfilesToHomedir() {
    echo "Linking from $HOME/.dotfiles to $HOME"
    for i in $HOME/.dotfiles/*; do
        i=`basename $i`
        j=`echo "$i" | grep '~$'`
        case $i in
           _MTN|setup|deptool.config|zsh-*|backup.*|README|lintel-source) : ;;
           rpmmacros.in) 
                sed -e "s,HOME,$HOME," -e "s,USER,$USER," \
                    $HOME/.dotfiles/rpmmacros.in >$HOME/.dotfiles/rpmmacros
                maybeLink rpmmacros
                ;;
           $j) : ;;
           *) maybeLink $i ;;
        esac
    done
}

copyUpdate() {
    if [ -f $2 ]; then
        if cmp $1 $2 >/dev/null 2>&1; then
            : # unchanged; do nothing
        else
            mv $2 $3
            cp $1 $2
            echo "diff -c $3 $2"
        fi
    else
        cp $1 $2
        echo "cat $2"
    fi
}

validateHomedirOk() {
    validate_oksrc=`cat $DOTFILES/.ok-src-dir 2>/dev/null`
    if [ "$validate_oksrc" = $SRCPATH ]; then
        echo "$SRCPATH validated as ok."
        echo "   to re-check: rm $DOTFILES/.ok-src-dir to re-check"
    else
        echo "WARNING: $SRCPATH is not under $HOME."
        echo "if $HOME is shared on multiple machines, and $SRCPATH is not,"
        echo "you will get errors in the future about missing .dotfiles/lintel-source/setup."
        echo -n "Return to continue, ctrl-c to abort: "
        read foo
        echo $SRCPATH >$DOTFILES/.ok-src-dir
    fi
}

copyFromLintelToDotfiles() {
    DOTFILES=$HOME/.dotfiles
    mkdir -p $DOTFILES
    case $SRCPATH in
        $HOME/*) : ;;
        *) validateHomedirOk ;;
    esac
    ln -snf $SRCPATH $DOTFILES/lintel-source
    echo "Copying from $SRCPATH to $DOTFILES; to see changes:"
    BACKUPDIR=backup.`date +%Y-%m-%d`.$$
    mkdir $DOTFILES/$BACKUPDIR
    for i in $SRCPATH/*; do
        BASE=`basename $i`
        case $BASE in
            *~) : ;;
            \#*\#) : ;;
            *) copyUpdate $i $DOTFILES/$BASE $DOTFILES/$BACKUPDIR/$BASE ;;
        esac
    done
    # if we copied anything, this will just fail; otherwise we clean up the user's directory
    rmdir $DOTFILES/$BACKUPDIR 2>/dev/null || true
}

errorOutOfDate() {
    echo $1
    exit 1
}

getOutOfDate() {
    cd $HOME/.dotfiles || errorOutOfDate "Missing $HOME/.dotfiles"
    [ -f lintel-source/setup ] || errorOutOfDate "Missing .dotfiles/lintel-source/setup; run $PROJECTS/Lintel/src/dotfiles/setup?"
    OUT_OF_DATE=
    for i in lintel-source/*; do
        BASE=`basename $i`
        case $BASE in
            *~) : ;;
            \#*\#) : ;;
            *)
                if cmp $BASE $i >/dev/null 2>&1; then
                    :
                else
                    OUT_OF_DATE="$BASE $OUT_OF_DATE"
                fi
                ;;
        esac
    done
    echo $OUT_OF_DATE
}

listOutOfDate() {
    OUT_OF_DATE=`getOutOfDate`
    if [ "$OUT_OF_DATE" = "" ]; then
        exit 0
    else
        echo "WARNING: .dotfiles out of date for: $OUT_OF_DATE"
        echo "to diff: (cd $HOME/.dotfiles ; ./setup --diff)"
        echo "to fix: (cd `readlink $HOME/.dotfiles/lintel-source` ; ./setup)" 
        exit 1
    fi
}

diffWithSource() {
    DIFFPROGRAM="$*"
    if [ -z "$DIFFPROGRAM" ]; then
        KDIFF3=`which kdiff3 2>/dev/null`
        if [ -z "$KDIFF3" ]; then
            DIFFPROGRAM="diff -c"
        else
            DIFFPROGRAM="$KDIFF3"
        fi
    fi

    OUT_OF_DATE=`getOutOfDate`

    if [ -z "$OUT_OF_DATE" ]; then
        echo "No files out of date"
    else
        cd $HOME/.dotfiles
        for i in $OUT_OF_DATE; do
            $DIFFPROGRAM $i lintel-source/$i
        done
    fi
    exit 0
}

runSetup() {
    case $0 in
        /*) SRCPATH=`dirname $0` ;;
        *) SRCPATH=`dirname $PWD/$0` ;;
    esac

    SRCPATH=`echo $SRCPATH | sed -e 's/\/\.$//g' -e 's/\/\.\//\//g'`

    case $SRCPATH in 
        */.dotfiles) linkFromDotfilesToHomedir ;;
        */Lintel*/src/dotfiles) copyFromLintelToDotfiles && cd $HOME/.dotfiles \
            && echo "------------------------------" && ./setup ;;
        *) echo "ERROR: do not know how to operate from $SRCPATH"; exit 1 ;;
    esac
    exit 0
}

help() {
    echo "Usage: $0 # Setup dotfiles, copying from `dirname $0` or symlinking from $HOME/.dotfiles"
    echo "  [--list-out-of-date] # list out of date dotfiles"
    echo "  [--diff [diff-program...]] # compare current and source dotfiles"
    echo "  [-h | --help] # print this help"
}

case "$1" in
    --list-out-of-date) listOutOfDate ;;
    --diff) shift; diffWithSource "$*" ;;
    -h|--help) help; exit 0 ;;
    "") runSetup ;;
    *) echo "Unknown option '$1'"; help; exit 1;
esac

echo "Internal error '$1'"
exit 1
