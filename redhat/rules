#!/usr/bin/make -f

help:
	@echo "redhat/rules tar # make ../Lintel-<version>.tar.gz"
	@echo "redhat/rules copy-tar # copy ../Lintel-<version>.tar.gz to rpm_topdir"
	@echo "redhat/rules rpm # build rpms"
	@echo "redhat/rules repo # copy rpms to yum repo under $$REDHAT_REPO"
	@echo "redhat/rules clean # clean up temporary files made during above steps"
	@echo "redhat/rules all-rpms # rebuild rpms on all the different platforms we support"
	@echo "    # note you probably need lots of environment setup for this target to work"

.SECONDARY:

mock-%: /var/cache/mock/lintel-%/root_cache/cache.tar.gz /etc/mock/lintel-%.cfg
	[ `whoami` = root ]
	mock --rebuild --cleanup-after --resultdir=/var/lib/mock/result/$* \
	    -r lintel-$* `redhat/get-srpm.sh $*`

/var/cache/mock/%/root_cache/cache.tar.gz: /etc/mock/%.cfg
	[ `whoami` = root ]
	[ ! -z "$$http_proxy" ]
	echo $$http_proxy
	ls -l /etc/mock/$*.cfg
	mock --init -r $*

/etc/mock/lintel-%.cfg: 
	[ `whoami` = root ]
	./redhat/mock-cfg.pl $*
	echo "made $@"

chroot-%: 
	[ `whoami` = root ]
	./redhat/opensuse-build.sh $*

tar: redhat/stamp/tar

copy-tar: redhat/stamp/copy-tar

rpm: redhat/stamp/rpm

repo: redhat/stamp/repo

clean:
	-if [ -d _MTN ]; then rm Release.info Changelog.mtn; fi
	-. redhat/get-version.sh && rm ../Lintel-$$VERSION.tar.gz
	rm -rf redhat/stamp
	rm redhat/Lintel.spec

redhat/stamp/tar: 
	./redhat/make-tar.sh
	mkdir -p `dirname $@`
	touch $@

redhat/stamp/copy-tar: redhat/stamp/tar
	./redhat/copy-tar.sh
	touch $@

redhat/stamp/rpm: redhat/stamp/copy-tar
	rpmbuild -ba redhat/Lintel.spec
