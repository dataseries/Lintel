#
# (c) Copyright 2008, Hewlett-Packard Development Company, LP
#
#  See the file named COPYING for license details
#
# All of the options and dependencies for the various cmake sub-bits

INCLUDE(LintelCMakeUtil)

LINTEL_RPATH_CONFIG()

#### Default build type

IF(NOT CMAKE_BUILD_TYPE)
    MESSAGE("WARNING: you did not set a CMAKE_BUILD_TYPE; assuming RelWithDebInfo")
    SET(CMAKE_BUILD_TYPE RelWithDebInfo)
ENDIF(NOT CMAKE_BUILD_TYPE)

#### Windows vs. Linux stuff

IF (WIN32)
    ADD_DEFINITIONS(/DSYS_NT)
    INCLUDE_DIRECTORIES(${Lintel_SOURCE_DIR}/include/Lintel/windows)
ELSE (WIN32)
    ADD_DEFINITIONS(-DSYS_POSIX)
ENDIF (WIN32)

##### Required bits

INCLUDE(FindBoost)
IF(NOT Boost_FOUND)
    MESSAGE(FATAL_ERROR "ERROR: Could NOT find the Boost includes and libraries")
ENDIF(NOT Boost_FOUND)

INCLUDE(LintelFind)
SET(BOOST_THREAD_FIND_REQUIRED ON)
LINTEL_BOOST_EXTRA(BOOST_THREAD boost/thread/tss.hpp boost_thread)

IF(NOT "${BOOST_THREAD_INCLUDES}" STREQUAL "${Boost_INCLUDE_DIRS}") 
    MESSAGE(FATAL_ERROR "Huh? different boost-thread/boost include dirs '${BOOST_THREAD_INCLUDES}' != '${Boost_INCLUDE_DIRS}' " )
ENDIF(NOT "${BOOST_THREAD_INCLUDES}" STREQUAL "${Boost_INCLUDE_DIRS}") 

##### Optional bits

LINTEL_WITH_PROGRAM(PERL perl)
LINTEL_WITH_PROGRAM(GNUPLOT gnuplot)
LINTEL_WITH_PROGRAM(PSTOPNM pstopnm)
LINTEL_WITH_PROGRAM(PNMSCALE pnmscale)
LINTEL_WITH_PROGRAM(PNMTOPNG pnmtopng)
LINTEL_WITH_PERL_MODULE(PERL_IO_PTY IO::Pty)
LINTEL_WITH_PERL_MODULE(PERL_DATA_SHOWTABLE Data::ShowTable)
LINTEL_WITH_PERL_MODULE(PERL_DBI DBI)
LINTEL_WITH_PERL_MODULE(PERL_DBD_MYSQL DBD::mysql)

IF(0)
ELSEIF(PERL_ENABLED AND GNUPLOT_ENABLED AND PSTOPNM_ENABLED AND PNMSCALE_ENABLED 
      AND PNMTOPNG_ENABLED AND PERL_IO_PTY_ENABLED AND PERL_DATA_SHOWTABLE_ENABLED)
    SET(MERCURY_PLOT_ENABLED ON)
ELSE(0)
     MESSAGE("Could not find all of perl(${PERL_ENABLED}), gnuplot(${GNUPLOT_ENABLED}), pstopnm(${PSTOPNM_ENABLED}), pnmscale(${PNMSCALE_ENABLED}), pnmtopng(${PNMTOPNG_ENABLED}), IO::Pty module (${PERL_IO_PTY_ENABLED}), Data::ShowTable module (${PERL_DATA_SHOWTABLE_ENABLED}); mercury-plot will not be built")
    SET(MERCURY_PLOT_ENABLED OFF)
ENDIF(0)

IF(0)
ELSEIF(PERL_ENABLED AND PERL_DBI_ENABLED AND PERL_DBD_MYSQL_ENABLED)
    SET(LINTEL_DBI_ENABLED ON)
ELSE(0)
    MESSAGE("Could not find all of perl(${PERL_ENABLED}), DBI module ($PERL_DBI_ENABLED), DBD::mysql module ($PERL_DBD_MYSQL_ENABLED); Lintel::DBI will not be build")
    SET(LINTEL_DBI_ENABLED OFF)
ENDIF(0)

OPTION(ENABLE_STDIO64 "Enable 64 bit stdio bits")
# Package for detecting if we are in a virtual machine...
#  Home page:        http://et.redhat.com/~rjones/virt-what/
#  Source and RPMs:  http://et.redhat.com/~rjones/virt-what/files/
OPTION(ENABLE_CLOCK_TEST "Enable the cycle-counter clock test; has trouble in virtual machines" ON)

### Library type

OPTION(BUILD_SHARED_LIBS "Should we build shared libraries" ON)
IF(BUILD_SHARED_LIBS)
    SET(LIBRARY_TYPE SHARED)
ELSE(BUILD_SHARED_LIBS)
    SET(LIBRARY_TYPE STATIC)
ENDIF(BUILD_SHARED_LIBS)

### Documentation

INCLUDE(LintelDocs)

LINTEL_DOCS_CONFIG("Lintel")

### Threads

INCLUDE(FindThreads)
OPTION(WITH_THREADS "Try to build with thread (pthread right now) support?" On)
IF(CMAKE_HAVE_THREADS_LIBRARY AND CMAKE_HAVE_PTHREAD_H AND WITH_THREADS)
    SET(THREADS_ENABLED ON)
ELSE(CMAKE_HAVE_THREADS_LIBRARY AND CMAKE_HAVE_PTHREAD_H AND WITH_THREADS)
    SET(THREADS_ENABLED OFF)
ENDIF(CMAKE_HAVE_THREADS_LIBRARY AND CMAKE_HAVE_PTHREAD_H AND WITH_THREADS)

IF(WITH_THREADS AND NOT THREADS_ENABLED)
    MESSAGE("WITH_THREADS on, but could not find pthread includes/libraries.")
    MESSAGE("  LintelPThread library will be skipped.")
ENDIF(WITH_THREADS AND NOT THREADS_ENABLED)

IF(WITH_THREADS AND THREADS_ENABLED)
    IF(HAS_PTHREAD_ISLOCKED)
        SET(PTHREAD_ISLOCKED_QUIET ON)
    ELSE(HAS_PTHREAD_ISLOCKED)
        MESSAGE("Determining expression for PThreadMutex::isLocked()")
        EXECUTE_PROCESS(COMMAND uname OUTPUT_VARIABLE HOST_TYPE
                        OUTPUT_STRIP_TRAILING_WHITESPACE)
        IF(0)
        ELSEIF("${HOST_TYPE}" STREQUAL "HP-UX")
            SET(TMP_HAS_PTHREAD_ISLOCKED 1)
    	    SET(TMP_PTHREAD_ISLOCKED_EXPR "((char *)&m)[67] == 0")
        ELSEIF("${HOST_TYPE}" STREQUAL "Linux")
	    LINTEL_TRY_RUN(LINUX_ISLOCKED_1 config/linux-islocked-1.cpp
	                   CMAKE_FLAGS -DLINK_LIBRARIES=-lpthread)
	    LINTEL_TRY_RUN(LINUX_ISLOCKED_2 config/linux-islocked-2.cpp
	                   CMAKE_FLAGS -DLINK_LIBRARIES=-lpthread)
	    LINTEL_TRY_RUN(LINUX_ISLOCKED_3 config/linux-islocked-3.cpp
	                   CMAKE_FLAGS -DLINK_LIBRARIES=-lpthread)
            IF(0)    
            ELSEIF(LINUX_ISLOCKED_1)
                SET(TMP_HAS_PTHREAD_ISLOCKED 1)
                SET(TMP_PTHREAD_ISLOCKED_EXPR "m.__m_lock.__status != 0")
            ELSEIF(LINUX_ISLOCKED_2)
                SET(TMP_HAS_PTHREAD_ISLOCKED 1)
                SET(TMP_PTHREAD_ISLOCKED_EXPR "m.__data.__lock != 0")
            ELSEIF(LINUX_ISLOCKED_3)
                SET(TMP_HAS_PTHREAD_ISLOCKED 1)
                SET(TMP_PTHREAD_ISLOCKED_EXPR "m.__m_reserved != 0")
            ELSE(0)
                SET(TMP_HAS_PTHREAD_ISLOCKED 0)
            ENDIF(0)
        ELSE(0)
            SET(TMP_HAS_PTHREAD_ISLOCKED 0)
        ENDIF(0)
    
        SET(HAS_PTHREAD_ISLOCKED ${TMP_HAS_PTHREAD_ISLOCKED} CACHE INTERNAL 
            "do we have islocked" FORCE)
        SET(PTHREAD_ISLOCKED_EXPR "${TMP_PTHREAD_ISLOCKED_EXPR}" CACHE INTERNAL
           "what expression calculates islocked?" FORCE)
    ENDIF(HAS_PTHREAD_ISLOCKED)

    IF(HAS_PTHREAD_ISLOCKED)
        IF(NOT PTHREAD_ISLOCKED_QUIET)
            MESSAGE("  Success, using ${PTHREAD_ISLOCKED_EXPR}")
        ENDIF(NOT PTHREAD_ISLOCKED_QUIET)
    ELSE(HAS_PTHREAD_ISLOCKED)
        MESSAGE("  Unable to figure out how to determine if a mutex is locked")
    ENDIF(HAS_PTHREAD_ISLOCKED)
    CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/include/Lintel/PThread.hpp.in
                   ${CMAKE_CURRENT_BINARY_DIR}/include/Lintel/PThread.hpp
                   @ONLY)
ENDIF(WITH_THREADS AND THREADS_ENABLED)

### LibXML2

INCLUDE(FindLibXml2)
OPTION(WITH_LIBXML2 "Use the libxml2 library if it is found?" On)
IF(LIBXML2_FOUND AND WITH_LIBXML2)
    SET(LIBXML2_ENABLED ON)
ELSE(LIBXML2_FOUND AND WITH_LIBXML2)
    SET(LIBXML2_ENABLED OFF)
ENDIF(LIBXML2_FOUND AND WITH_LIBXML2)

IF(WITH_LIBXML2 AND NOT LIBXML2_ENABLED)
    MESSAGE("WITH_LIBXML2 on, but could not find libxml2 includes/libraries.")
    MESSAGE("  XMLUtil and LintelLogXML will be skipped.")
ENDIF(WITH_LIBXML2 AND NOT LIBXML2_ENABLED)

### Latex

INCLUDE(FindLATEX)
FIND_PROGRAM(PS2PDF14_CONVERTER
  NAMES ps2pdf14
  PATHS ${MIKTEX_BINARY_PATH} /usr/bin
)

OPTION(WITH_LATEX "Include the latex rebuild script (requires latex, bibtex, dvips, ps2pdf14)" On)
IF(WITH_LATEX)
    IF(LATEX_COMPILER AND BIBTEX_COMPILER AND DVIPS_CONVERTER 
       AND PS2PDF14_CONVERTER)
        SET(LATEX_ENABLED ON)
    ELSE(LATEX_COMPILER AND BIBTEX_COMPILER AND DVIPS_CONVERTER 
         AND PS2PDF14_CONVERTER)
        SET(LATEX_ENABLED OFF)
    ENDIF(LATEX_COMPILER AND BIBTEX_COMPILER AND DVIPS_CONVERTER 
          AND PS2PDF14_CONVERTER)

    IF(NOT LATEX_ENABLED) 
        MESSAGE("WITH_LATEX on, but could not find latex, bibtex, dvips, ps2pdf14")
    ENDIF(NOT LATEX_ENABLED) 
ENDIF(WITH_LATEX)

## Boost optional bits

# TODO: figure out how to extend this to also do versioning,
# boost 1.32 doesn't have enough of program options for us to work.
LINTEL_BOOST_EXTRA(BOOST_PROGRAM_OPTIONS boost/program_options.hpp boost_program_options)
IF(NOT BOOST_PROGRAM_OPTIONS_LIBRARIES)
    MESSAGE("Unable to find boost/program_options.hpp; will not build Lintel/ProgramOptions")
ENDIF(NOT BOOST_PROGRAM_OPTIONS_LIBRARIES)

