#!/usr/bin/make -f
# -*- makefile -*-

# TODO: once we stop supporting debian/lenny, ubuntu/hardy upgrade to using the dh command.

#export DH_VERBOSE=1

help:
	echo "fakeroot ./debian/rules binary"
	echo "fakeroot ./debian/rules debian/stamp/pbuilder/debian-lenny-amd64"

VERSION := $(shell perl -ne '/\w+\s+\(([0-9\.]+)\) /o || die "bad $$_"; print "$$1"; exit(0);' <debian/changelog)

DEBIAN_VERSIONS := lenny squeeze sid
PBUILDER_DEBIAN := $(foreach dist, $(DEBIAN_VERSIONS), \
	               $(foreach arch, amd64 i386, debian/stamp/pbuilder/debian-$(dist)-$(arch)))

# Ubuntu releases(EOL): dapper(2011-06) hardy (2013-04) karmic (2011-04) lucid (2015-04) 
#                       maverick(2012-04) natty (2012-10) oneiric (2011-10 .. 2013-04)
# Not going to support dapper, it's about to expire and it has a Release format old enough
# that lenny debootstrap doesn't recognize it.
UBUNTU_VERSIONS := hardy karmic lucid maverick natty
PBUILDER_UBUNTU := $(foreach dist, $(UBUNTU_VERSIONS), \
		       $(foreach arch, amd64 i386, debian/stamp/pbuilder/ubuntu-$(dist)-$(arch)))

.PRECIOUS: %.tgz

tars: tars-debian tars-ubuntu

tars-debian: $(foreach dist,$(DEBIAN_VERSIONS), \
	         $(foreach arch, amd64 i386, /var/cache/pbuilder/debian-$(dist)-$(arch).tgz))

tars-ubuntu: $(foreach dist,$(UBUNTU_VERSIONS), \
	         $(foreach arch, amd64 i386, /var/cache/pbuilder/ubuntu-$(dist)-$(arch).tgz))

pbuilder: pbuilder-debian pbuilder-ubuntu

pbuilder-debian: $(PBUILDER_DEBIAN)

pbuilder-ubuntu: $(PBUILDER_UBUNTU)

debian/stamp/pbuilder/%: /var/cache/pbuilder/%.tgz
	[ -f ../lintel_$(VERSION).dsc ]
	touch /var/cache/pbuilder
	perl debian/fixup-dsc.pl $* < ../lintel_$(VERSION).dsc >../lintel_$(VERSION)-$*.dsc
	pbuilder --build --basetgz /var/cache/pbuilder/$*.tgz \
	    --buildresult /var/cache/pbuilder/result/$* ../lintel_$(VERSION)-$*.dsc
	rm ../lintel_$(VERSION)-$*.dsc
	mkdir -p debian/stamp/pbuilder
	touch $@

/var/cache/pbuilder/debian-%.tgz:
	touch /var/cache/pbuilder
	pbuilder --create --basetgz $@-new --distribution `echo $* | sed 's/-.*//'` \
	    --debootstrapopts --arch=`echo $* | sed 's/.*-//'` \
	    --mirror http://http.us.debian.org/debian
	mv $@-new $@

UMIRROR=http://mirrors2.kernel.org/ubuntu/
/var/cache/pbuilder/ubuntu-%.tgz:
	[ ! -z "$$http_proxy" ]
	touch /var/cache/pbuilder
	# cdebootstrap does not work for maverick
	pbuilder --create --basetgz $@-new --distribution `echo $* | sed 's/-.*//'` \
	    --debootstrapopts --arch=`echo $* | sed 's/.*-//'` --debootstrap debootstrap \
	    --othermirror "deb $(UMIRROR) `echo $* | sed 's/-.*//'` universe" \
	    --mirror $(UMIRROR)
	mv $@-new $@

debian/build/config-stamp: 
	dh_testdir
	mkdir -p debian/build
	(cd debian/build; cmake -DCMAKE_INSTALL_PREFIX=/usr ../..)
	touch $@

build: build-stamp
build-stamp:  debian/build/config-stamp
	dh_testdir

	# TODO: remove the -j6, also run tests.
	(cd debian/build && $(MAKE) -j 6)
	(cd debian/build && ctest)

	touch $@

clean: 
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	[ ! -d debian/build ] || rm -rf debian/build
	[ ! -d debian/stamp ] || rm -rf debian/stamp

	dh_clean

TMP_USR=$(CURDIR)/debian/tmp/usr
install: build
	dh_testdir
	dh_testroot
	dh_prep || dh_clean -k
	dh_installdirs

	(cd debian/build && $(MAKE) DESTDIR=$(CURDIR)/debian/tmp install)
	./debian/fix-install.sh $(CURDIR)/debian/tmp


# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installchangelogs -i
	dh_installdocs -i
	dh_installexamples -i
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installcatalogs
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
#	dh_installwm
#	dh_installudev
#	dh_lintian
#	dh_bugfiles
#	dh_undocumented
	dh_installman -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_perl -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
	# TODO: auto-make changelog from version control if needed
	dh_installchangelogs -a
	dh_installdocs -a
	dh_installexamples -a
	# TODO: remove once we are at debhelper compat level 7
	dh_install -a --sourcedir=debian/tmp 
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman -a
	dh_link -a
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_perl -a
#	dh_python
	dh_makeshlibs -a -v
	dh_installdeb -a
	# CMake seems to be forcing the linking with libraries that lintel depends on 
	# for lintelpthread even though lintelpthread doesn't directly need it.  Similarly,
	# it directly links to those libraries for the applications.
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
