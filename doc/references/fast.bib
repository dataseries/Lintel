@inproceedings{rhea:pond:fast2003,
 author = {Rhea, Sean and Eaton, Patrick and Geels, Dennis and Weatherspoon, Hakim and Zhao, Ben and Kubiatowicz, John},
 title = {Pond: The OceanStore Prototype},
 booktitle = {FAST '03: Proceedings of the 2nd USENIX Conference on File and Storage Technologies},
 year = {2003},
 pages = {1--14},
 location = {San Francisco, CA},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
 abstract = {OceanStore is an Internet-scale, persistent data store designed for incremental scalability, secure sharing, and long-term durability. Pond is the OceanStore prototype; it contains many of the features of a complete system including location-independent routing, Byzantine update commitment, push-based update of cached copies through an overlay multicast network, and continuous archiving to erasure-coded form. In the wide area, Pond outperforms NFS by up to a factor of 4.6 on read-intensive phases of the Andrew benchmark, but underperforms NFS by as much as a factor of 7.3 on write-intensive phases. Microbenchmarks show that write performance is limited by the speed of erasure coding and threshold signature generation, two important areas of future research. Further microbenchmarks show that Pond manages replica consistency in a bandwidth-efficient manner and quantify the latency cost imposed by this bandwidth savings. }
}


@inproceedings{abd-el-malek:ursa-minor:fast2005,
 author = {Abd-El-Malek, Michael and Courtright,II, William V. and Cranor, Chuck and Ganger, Gregory R. and Hendricks, James and Klosterman, Andrew J. and Mesnier, Michael and Prasad, Manish and Salmon, Brandon and Sambasivan, Raja R. and Sinnamohideen, Shafeeq and Strunk, John D. and Thereska, Eno and Wachs, Matthew and Wylie, Jay J.},
 title = {Ursa minor: versatile cluster-based storage},
 booktitle = {FAST'05: Proceedings of the 4th conference on USENIX Conference on File and Storage Technologies},
 year = {2005},
 location = {San Francisco, CA},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
 abstract = {No single encoding scheme or fault model is optimal for all data. A versatile storage system allows them to be matched to access patterns, reliability requirements, and cost goals on a per-data item basis. Ursa Minor is a cluster-based storage system that allows data-specific selection of, and on-line changes to, encoding schemes and fault models. Thus, different data types can share a scalable storage infrastructure and still enjoy specialized choices, rather than suffering from "one size fits all." Experiments with Ursa Minor show performance benefits of 2-3× when using specialized choices as opposed to a single, more general, configuration. Experiments also show that a single cluster supporting multiple workloads simultaneously is much more efficient when the choices are specialized for each distribution rather than forced to use a "one size fits all" configuration. When using the specialized distributions, aggregate cluster throughput nearly doubled.}
}


