\Remove all of the static classes that are not just base types; replace it with the static inside
function returning reference trick.  It just seems unsafe to have the static classes, the most
recent case was in program options which was failing with a bus error converting doubles into
strings for the help text on openbsd-4.9-amd64 (and only that variant, either 5.0 or i386 worked).


Update all of the classes to follow the guidelines in:
http://techbase.kde.org/Policies/Binary_Compatibility_Issues_With_C++
so we can maintain binary compatibility easier.

There are many things in Lintel that should be replaced with better and/or
more standard things from (e.g.) boost or std::tr1. For data structures,
also remember to check relative performance first.  In particular, the 
PriorityQueue, Deque, and HashTable(/Map/Unique) implementations all
exist because they were measured as faster.

add a test that checks whether or not we need '-Dstd=' rather than
guessing based on HP-UX compiler version

add in an option to StatsQuantile that controls directly the memory
used, and makes a tradeoff between the Nbound and the error so that
it's roughly balanced.

HashMap.H: figure out why HashMap<const std::string, int> gives a
compiler error with gcc-4.1

