Update all of the classes to follow the guidelines in:
http://techbase.kde.org/Policies/Binary_Compatibility_Issues_With_C++
so we can maintain binary compatibility easier.

There are many things in Lintel that should be replaced with better and/or
more standard things from (e.g.) boost or std::tr1. For data structures,
also remember to check relative performance first.  In particular, the 
PriorityQueue, Deque, and HashTable(/Map/Unique) implementations all
exist because they were measured as faster.

add a test that checks whether or not we need '-Dstd=' rather than
guessing based on HP-UX compiler version

add in an option to StatsQuantile that controls directly the memory
used, and makes a tradeoff between the Nbound and the error so that
it's roughly balanced.

HashMap.H: figure out why HashMap<const std::string, int> gives a
compiler error with gcc-4.1
